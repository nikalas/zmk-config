/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R     &kp T                                                    &kp Y   &kp U     &kp I          &kp O    &kp P     &kp BSLH
&mt ESCAPE RCTRL  &kp A  &kp S  &kp D     &kp F     &kp G                                                    &kp H   &kp J     &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V     &kp B      &lt 1 HOME  &kp DELETE  &kp LSHFT  &kp END    &kp N   &kp M     &kp COMMA      &kp DOT  &kp FSLH  &kp RCTRL
                                &kp LGUI  &kp LEFT  &kp RIGHT  &kp SPACE   &kp BSPC    &kp RET    &kp SPACE  &kp UP  &kp DOWN  &kp KP_DIVIDE
            >;
        };

        symbol {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "symbol";
        };

        Numbers {
            bindings = <
&trans  &kp N7  &kp N8  &kp N9  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N4  &kp N5  &kp N6  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1  &kp N2  &kp N3  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "num";
        };

        F-keys {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F4  &kp F5  &kp F6  &kp F12  &trans                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "fkey";
        };
    };
};
